---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 11301.
--- DateTime: 2020/8/16 22:52
---

JoJo = {
    -- home键所在未知.  //TODO 可以优化掉, 运行时无视home
    _J_HOME = nil;
    --自定义分辨率
    _J_SIZE = nil;
    -- dpi
    _J_DPI = Point();
    -- 所有的页面
    _J_PAGE = nil;
    -- 回显数据
    _J_SHOW = nil;
    _J_PAGE_SLEEP = nil;
}

--- 设置home 键位置, 基本上不需要.
function JoJo:home(ore)
    self._J_HOME = ore;
    return self;
end

-- 设置分辨率
function JoJo:size(...)
    self._J_SIZE = { ... };
    return self;
end

-- 设置屏幕dpi
function JoJo:dpi(dpi)
    self._J_DPI = dpi
    return self
end

--- 设置所有页面
function JoJo:pages(page)
    self._J_PAGE = page;
    return self;
end

-- 设置点击回显
function JoJo:show(...)
    self._J_SHOW = { ... };
    return self;
end

-- 初始化方法
function JoJo:init()
    -- 初始化屏幕朝向
    if self._J_HOME then
        screen.init(self._J_HOME)
    else
        self:kill("需要设置屏幕方向")
    end
    -- 设置页面集
    if self._J_PAGE then
        self._J_PAGE = require(self._J_PAGE)
    else
        self:kill("需要设置页面集合")
    end
    if self._J_DPI then
    end
    if self._J_SIZE then
    end
end

--- 软退出
function JoJo:exit()
    os.execute("wm size reset \r\n")
    os.execute("wm size reset \r\n")
    os.execute("wm overscan reset \r\n")
    return self;
end

--- 强制退出
function JoJo:kill(msg)
    if msg then
        UI.toast(msg)
    else
        UI.toast('脚本已退出');
    end
    sleep(2000);
    xmod.exit()
    return self;
end
function JoJo:ps(ps)
    self._J_PAGE_SLEEP = ps;
    return self;
end




---screen.findColor(Rect rect, any color, integer globalFuzz, integer priority)
function JoJo:getPoint(tab)
    return screen.findColor(tab[1], tab[2], tab[3], tab[4])
    --    if pos ~= Point.INVALID then
    --         pos
    --    end
end

--- 显示点击按钮
function JoJo:showTouch(point, hid)
    if self._J_SHOW then
        if hid then
            -- 更新显示坐标  showHUD(id,text,size,color,bg,pos,x,y,width,height)
            showHUD(hid, "", 18, "0x00000000", self._J_SHOW[1] or "click.png", 0, point.x, point.y, sWidth or 80, sHeight or 80)
            showHUD(hid, "", 18, "0x00000000", "click.png", 0, point.x, point.y, 80, 80)
        else
            hid = createHUD()
            -- 第一次显示
            showHUD(hid, "", 18, "0x00000000", self._J_SHOW[1] or "click.png", 0, point.x, point.y, 80, 80)
        end
        return hid
    end
end

function JoJo:hideTouch(hid)
   if hid then hideHUD(hid) end
end

function JoJo:freLogic(v)

end

function jTouch(pos)
    touch.down(1, pos)
    sleep(math.random(80, 120))
    touch.up(1, pos)
end

-----------
function JoJo:getCurrentPage(ps)
    local param = ps or self._J_PAGE
    for k, v in pairs(param) do
        local var = self:getPoint(v[1])
        print(tostring(var))
        if var ~= Point.INVALID then
            return v.name, var
        end
    end
end

function JoJo:action(action, points)

    local ext, skipaction;
    if action.beforeFun then
        ext, skipaction = action:beforeFun(points);
        if skipaction then
            return ext;
        end
    end

    if not skipaction then
        for o = 1, 10000, 1 do
            if action.orders[o] then
                if type(action.orders[o]) == "table" then
                    action.orders[o]:run(action, points);
                else
                    action.orders[o](action, points)
                end
            else
                break ;
            end
        end
    end

    action.action_lastTime = os.milliTime();

    if action.afterFun then
        local isExt = action:afterFun(points, action);
        return isExt or false;
    end
    return ext or false;
end

function JoJo:execute(task, tim)
    local exTag = true;
    local runTimes = 1;
    while exTag do
        local currentPage, points = self:getCurrentPage();
        for k, v in pairs(task) do
            --- 这里的部分可以处理成一个协成, 这样的话, 就可以流程化
            local ext = nil;
            if (v.action_page == ALL_PAGE or v.action_page.name == currentPage) then
                if v.action_btn then
                    points = self:getPoint(v.action_btn);
                end
                if points then
                    ext = self:action(v, points);
                end
            end
            if points == nil and v.uncheckFun and (v.action_btn == nil or (currentPage and v.action_btn)) then
                ext = v.uncheckFun();
            end
            if ext then
                return
            end ;
        end

        sleep(self._J_PAGE_SLEEP or 1000);

        if tim ~= nil and runTimes >= tim then
            break ;
        end
        runTimes = runTimes + 1
    end
end

return JoJo
